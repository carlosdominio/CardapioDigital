// ===================================
//   CONFIGURA√á√ÉO DO BOT AUTOM√ÅTICO
// ===================================

// ‚ö†Ô∏è IMPORTANTE: Configure o n√∫mero do gerente aqui
const BOT_CONFIG = {
    // üì± N√öMERO DO GERENTE (ALTERE AQUI!)
    gerente: {
        phone: '5582994247688', // Formato: 55 + DDD + n√∫mero
        name: 'Gerente da Lanchonete'
    },
    
    // ü§ñ Configura√ß√µes do Bot
    bot: {
        enabled: true,
        autoStart: true, // Iniciar automaticamente
        reconnectAttempts: 5,
        reconnectDelay: 5000, // 5 segundos
        sessionPath: './tokens/whatsapp-session'
    },
    
    // üì® Configura√ß√µes de Mensagens
    messages: {
        welcome: 'ü§ñ Bot do Card√°pio Digital conectado e monitorando pedidos!',
        newOrder: 'üÜï NOVO PEDIDO AUTOM√ÅTICO',
        orderUpdate: 'üîÑ PEDIDO ATUALIZADO',
        botStatus: 'üìä STATUS DO BOT',
        urgent: 'üî• URGENTE - Pedido acabou de chegar!',
        footer: 'ü§ñ _Enviado automaticamente pelo Bot do Card√°pio Digital_'
    },
    
    // ‚è∞ Configura√ß√µes de Tempo
    timing: {
        urgentMinutes: 2, // Pedidos urgentes at√© 2 minutos
        normalMinutes: 5, // Pedidos normais at√© 5 minutos
        statusInterval: 30 // Enviar status a cada 30 minutos
    }
};

// Fun√ß√£o para validar configura√ß√£o
function validarConfiguracao() {
    const erros = [];
    
    if (!BOT_CONFIG.gerente.phone || BOT_CONFIG.gerente.phone === '5582994247688') {
        erros.push('‚ö†Ô∏è Configure o n√∫mero do gerente em BOT_CONFIG.gerente.phone');
    }
    
    if (!BOT_CONFIG.gerente.phone.match(/^55\d{10,11}$/)) {
        erros.push('‚ö†Ô∏è Formato do telefone inv√°lido. Use: 55 + DDD + n√∫mero (ex: 5511999999999)');
    }
    
    return erros;
}

// Fun√ß√£o para formatar n√∫mero de telefone
function formatarTelefone(phone) {
    let cleanPhone = phone.replace(/\D/g, '');
    if (cleanPhone.startsWith('0')) {
        cleanPhone = cleanPhone.substring(1);
    }
    if (!cleanPhone.startsWith('55')) {
        cleanPhone = '55' + cleanPhone;
    }
    return cleanPhone + '@s.whatsapp.net';
}

// Fun√ß√£o para calcular urg√™ncia do pedido
function calcularUrgencia(timestamp) {
    const agora = new Date();
    const pedidoTime = new Date(timestamp);
    const diffMinutos = Math.floor((agora - pedidoTime) / (1000 * 60));
    
    if (diffMinutos < BOT_CONFIG.timing.urgentMinutes) {
        return {
            nivel: 'urgente',
            emoji: 'üî•',
            texto: BOT_CONFIG.messages.urgent
        };
    } else if (diffMinutos < BOT_CONFIG.timing.normalMinutes) {
        return {
            nivel: 'normal',
            emoji: '‚ö°',
            texto: `‚ö° *Pedido h√° ${diffMinutos} minutos*`
        };
    } else {
        return {
            nivel: 'antigo',
            emoji: '‚è≥',
            texto: `‚è≥ *Pedido h√° ${diffMinutos} minutos*`
        };
    }
}

// Fun√ß√£o para formatar mensagem de pedido
function formatarMensagemPedido(pedido) {
    const itensTexto = pedido.itens.map(item => 
        `${item.quantidade}x ${item.nome} - R$ ${(item.preco * item.quantidade).toFixed(2).replace('.', ',')}`
    ).join('\n');

    const statusEmoji = pedido.status === 'novo' ? 'üÜï' : 'üîÑ';
    const urgencia = calcularUrgencia(pedido.timestamp);
    const isUpdate = pedido.versao && pedido.versao > 1;

    return `${statusEmoji} *${isUpdate ? BOT_CONFIG.messages.orderUpdate : BOT_CONFIG.messages.newOrder}*

üë§ *Cliente:* ${pedido.cliente}
üè† *Mesa:* ${pedido.numeroMesa}
üîë *C√≥digo:* ${pedido.mesaCode}

üìã *Itens:*
${itensTexto}

üí∞ *Total:* ${pedido.total}
üí≥ *Pagamento:* ${pedido.formaPagamento || 'N√£o informado'}

‚è∞ *Recebido:* ${new Date(pedido.timestamp).toLocaleString('pt-BR')}
${urgencia.texto}

---
${BOT_CONFIG.messages.footer}`;
}

// Fun√ß√£o para formatar mensagem de status
function formatarMensagemStatus() {
    return `ü§ñ *${BOT_CONFIG.messages.botStatus}*

‚úÖ *Conectado e funcionando*
üì± *Monitorando pedidos automaticamente*
üë§ *Gerente:* ${BOT_CONFIG.gerente.name}
‚è∞ *√öltima verifica√ß√£o:* ${new Date().toLocaleString('pt-BR')}

O bot est√° ativo e enviar√° automaticamente todos os novos pedidos!`;
}

// Exportar configura√ß√µes e fun√ß√µes
if (typeof window !== 'undefined') {
    // Browser
    window.BOT_CONFIG = BOT_CONFIG;
    window.formatarMensagemPedido = formatarMensagemPedido;
    window.formatarMensagemStatus = formatarMensagemStatus;
    window.validarConfiguracao = validarConfiguracao;
} else if (typeof module !== 'undefined' && module.exports) {
    // Node.js
    module.exports = {
        BOT_CONFIG,
        formatarMensagemPedido,
        formatarMensagemStatus,
        formatarTelefone,
        calcularUrgencia,
        validarConfiguracao
    };
}

// Log de inicializa√ß√£o
console.log('‚öôÔ∏è Configura√ß√£o do Bot WhatsApp carregada');
console.log('üì± Gerente configurado:', BOT_CONFIG.gerente.phone);

// Validar configura√ß√£o
const erros = validarConfiguracao();
if (erros.length > 0) {
    console.warn('‚ö†Ô∏è ATEN√á√ÉO - Problemas na configura√ß√£o:');
    erros.forEach(erro => console.warn(erro));
}