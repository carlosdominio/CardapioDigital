// ===================================
//   TESTE DA INTEGRA√á√ÉO WHATSAPP VERCEL
// ===================================

// Script para testar a integra√ß√£o WhatsApp no Vercel
// Execute no console do navegador ap√≥s carregar o site

async function testarIntegracaoWhatsApp() {
    console.log('üß™ Iniciando teste da integra√ß√£o WhatsApp...\n');

    // 1. Verificar configura√ß√£o
    console.log('1Ô∏è‚É£ Verificando configura√ß√£o...');
    if (typeof window.WHATSAPP_RESTAURANT_CONFIG === 'undefined') {
        console.error('‚ùå Configura√ß√£o WhatsApp n√£o encontrada!');
        console.log('üí° Verifique se whatsapp-config.js est√° carregado');
        return;
    }

    const config = window.WHATSAPP_RESTAURANT_CONFIG;
    console.log('‚úÖ Configura√ß√£o encontrada:', config);

    // Verificar telefone
    if (config.phone === '5511999999999') {
        console.warn('‚ö†Ô∏è Telefone ainda √© o padr√£o! Configure seu n√∫mero real.');
    } else {
        console.log('‚úÖ Telefone configurado:', config.phone);
    }

    // 2. Verificar inst√¢ncia WhatsApp
    console.log('\n2Ô∏è‚É£ Verificando inst√¢ncia WhatsApp...');
    if (typeof window.whatsappIntegration === 'undefined') {
        console.error('‚ùå Inst√¢ncia WhatsApp n√£o encontrada!');
        console.log('üí° Verifique se whatsapp-integration.js est√° carregado');
        return;
    }
    console.log('‚úÖ Inst√¢ncia WhatsApp encontrada');

    // 3. Testar conex√£o com API
    console.log('\n3Ô∏è‚É£ Testando conex√£o com API...');
    try {
        const response = await fetch('/api/whatsapp/status');
        const data = await response.json();
        
        if (response.ok) {
            console.log('‚úÖ API respondeu:', data);
            if (data.connected) {
                console.log('‚úÖ WhatsApp reportado como conectado');
            } else {
                console.log('‚ö†Ô∏è WhatsApp reportado como desconectado (normal no Vercel)');
            }
        } else {
            console.error('‚ùå Erro na API:', data);
        }
    } catch (error) {
        console.error('‚ùå Erro ao conectar com API:', error);
    }

    // 4. Testar gera√ß√£o de link
    console.log('\n4Ô∏è‚É£ Testando gera√ß√£o de link WhatsApp...');
    const pedidoTeste = {
        cliente: 'Mesa 1 - TESTE',
        numeroMesa: '1',
        mesaCode: 'TEST123',
        total: 'R$ 25,00',
        formaPagamento: 'Pix',
        timestamp: new Date().toISOString(),
        itens: [
            {
                nome: 'Hamb√∫rguer Teste',
                quantidade: 1,
                preco: 25.00
            }
        ]
    };

    try {
        const link = window.whatsappIntegration.gerarLinkWhatsApp(pedidoTeste);
        console.log('‚úÖ Link gerado com sucesso:');
        console.log(link);
        
        // Testar se o link √© v√°lido
        if (link.startsWith('https://wa.me/')) {
            console.log('‚úÖ Formato do link est√° correto');
        } else {
            console.error('‚ùå Formato do link est√° incorreto');
        }
    } catch (error) {
        console.error('‚ùå Erro ao gerar link:', error);
    }

    // 5. Testar envio (simulado)
    console.log('\n5Ô∏è‚É£ Testando envio de pedido...');
    try {
        const resultado = await window.enviarPedidoWhatsApp(pedidoTeste);
        if (resultado) {
            console.log('‚úÖ Envio simulado com sucesso');
        } else {
            console.log('‚ö†Ô∏è Envio falhou, mas fallback deve estar dispon√≠vel');
        }
    } catch (error) {
        console.error('‚ùå Erro no teste de envio:', error);
    }

    // 6. Verificar URLs da aplica√ß√£o
    console.log('\n6Ô∏è‚É£ Verificando URLs...');
    console.log('üåê URL atual:', window.location.origin);
    console.log('üîó API Status:', `${window.location.origin}/api/whatsapp/status`);
    console.log('üîó API Send:', `${window.location.origin}/api/whatsapp/send`);
    console.log('üîó API Send Order:', `${window.location.origin}/api/whatsapp/send-order`);

    // 7. Resumo final
    console.log('\nüìä RESUMO DO TESTE:');
    console.log('‚úÖ Configura√ß√£o carregada');
    console.log('‚úÖ Scripts carregados');
    console.log('‚úÖ APIs dispon√≠veis');
    console.log('‚úÖ Gera√ß√£o de link funcionando');
    
    if (config.phone !== '5511999999999') {
        console.log('‚úÖ Telefone configurado');
    } else {
        console.log('‚ö†Ô∏è Configure o telefone real');
    }

    console.log('\nüéâ Teste conclu√≠do! Verifique os resultados acima.');
    console.log('üí° Para testar completamente, fa√ßa um pedido real no site.');
}

// Fun√ß√£o para testar link direto
function testarLinkWhatsApp(telefone = null) {
    const phone = telefone || window.WHATSAPP_RESTAURANT_CONFIG?.phone || '5511999999999';
    const mensagem = 'Teste de integra√ß√£o WhatsApp - Card√°pio Digital';
    const link = `https://wa.me/${phone}?text=${encodeURIComponent(mensagem)}`;
    
    console.log('üîó Testando link direto:', link);
    window.open(link, '_blank');
}

// Fun√ß√£o para verificar se est√° no Vercel
function verificarVercel() {
    const isVercel = window.location.hostname.includes('vercel.app') || 
                    window.location.hostname.includes('.vercel.app');
    
    console.log('üåê Executando no Vercel:', isVercel ? 'Sim' : 'N√£o');
    console.log('üåê Hostname:', window.location.hostname);
    
    return isVercel;
}

// Executar automaticamente se estiver no console
if (typeof window !== 'undefined') {
    console.log('üß™ Script de teste WhatsApp carregado!');
    console.log('üìù Execute: testarIntegracaoWhatsApp()');
    console.log('üîó Teste link: testarLinkWhatsApp()');
    console.log('üåê Verificar Vercel: verificarVercel()');
}

// Exportar fun√ß√µes para uso global
if (typeof window !== 'undefined') {
    window.testarIntegracaoWhatsApp = testarIntegracaoWhatsApp;
    window.testarLinkWhatsApp = testarLinkWhatsApp;
    window.verificarVercel = verificarVercel;
}